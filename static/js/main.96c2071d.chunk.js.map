{"version":3,"sources":["redux/totoReducer.js","components/AddForm/AddForm.jsx","components/TodoList/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","App.js","redux/store.js","index.js"],"names":["ADD_TASK","DELETE_TASK","TOGGLE_IS_COMPLETED","initialState","tasks","totoReducer","state","action","type","newTask","id","Date","now","isCompleted","text","payload","map","task","filter","AddForm","React","memo","dispatch","useDispatch","useState","input","setInput","handleAddTask","trim","alert","className","placeholder","autoFocus","onBlur","value","onChange","e","target","onClick","disabled","TodoItem","checked","toggleIsCompleted","style","textDecoration","deleteTask","TodoList","useSelector","todos","console","log","marginLeft","todo","App","reducers","combineReducers","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAMA,EAAW,WACXC,EAAc,cACdC,EAAsB,sBAEtBC,EAAe,CACpBC,MAAO,IAoDOC,EAjDK,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACrD,OAAQA,EAAOC,MACd,KAAKR,EACJ,IAAMS,EAAU,CACfC,GAAIC,KAAKC,MACTC,aAAa,EACbC,KAAMP,EAAOQ,SAEd,OAAO,2BACHT,GADJ,IAECF,MAAM,GAAD,mBAAME,EAAMF,OAAZ,CAAmBK,MAG1B,KAAKP,EACJ,OAAO,2BACHI,GADJ,IAECF,MAAOE,EAAMF,MAAMY,KAAI,SAAAC,GAItB,OAHIA,EAAKP,KAAOH,EAAOQ,UACtBE,EAAKJ,aAAeI,EAAKJ,aAEnBI,OAIV,KAAKhB,EACJ,OAAO,2BACHK,GADJ,IAECF,MAAOE,EAAMF,MAAMc,QAAO,SAAAD,GAAI,OAAIA,EAAKP,KAAOH,EAAOQ,aAEvD,QACC,OAAOT,I,OCjCGa,EAAUC,IAAMC,MAAK,WACjC,IAAMC,EAAWC,cADsB,EAGbH,IAAMI,SAAS,IAHF,mBAGhCC,EAHgC,KAGzBC,EAHyB,KAKjCC,EAAgB,WDgCA,IAAAV,EC/BjBQ,EAAMG,QACTN,GD8BoBL,EC9BHQ,EAAMG,OD8BM,CAC/BpB,KAAMR,EACNe,QAASE,KC/BPS,EAAS,KAETG,MAAM,eAIR,OACC,sBAAKC,UAAU,UAAf,UACC,uBACCA,UAAU,QACVtB,KAAK,OACLuB,YAAa,kBACbC,WAAW,EACXC,OAAQN,EACRO,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAASU,EAAEC,OAAOH,UAGlC,qBAAKJ,UAAU,SAAf,SACC,wBAAQQ,QAASX,EAAeY,UAAWd,EAA3C,yBC5BSe,EAAWpB,IAAMC,MAAK,YAAgC,IAA7BP,EAA4B,EAA5BA,KAAMD,EAAsB,EAAtBA,YAAaH,EAAS,EAATA,GAClDY,EAAWC,cAUjB,OACC,+BACC,uBAAOf,KAAK,WAAWiC,QAAS5B,EAAasB,SAVrB,WACzBb,EFuC+B,SAAAZ,GAAE,MAAK,CACvCF,KAAMN,EACNa,QAASL,GEzCCgC,CAAkBhC,OAU1B,sBAAMiC,MAAO,CAAEC,eAAgB/B,GAAe,gBAA9C,SAAiEC,IACjE,wBAAQN,KAAK,SAAS8B,QARH,WACpBhB,EFwCwB,SAAAZ,GAAE,MAAK,CAChCF,KAAMP,EACNc,QAASL,GE1CCmC,CAAWnC,KAOnB,0BCfUoC,EAAW,WAAO,IACtB1C,EAAU2C,aAAY,qBAAGC,SAAzB5C,MAGR,OAFA6C,QAAQC,IAAI9C,GAGX,oBAAIuC,MAAO,CAAEQ,WAAY,QAAzB,SACE/C,EAAMY,KAAI,SAAAoC,GAAI,OACd,cAACZ,EAAD,eAA4BY,GAAbA,EAAK1C,UCOT2C,MAdf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,+CAEF,cAAC,EAAD,IACA,cAAC,EAAD,U,OCTJwB,EAAWC,YAAgB,CAC7BP,MAAO3C,IAGLmD,EAAQC,YAAYH,GAExBI,OAAOF,MAAQA,EAEAA,QCJfG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.96c2071d.chunk.js","sourcesContent":["const ADD_TASK = 'ADD_TASK'\nconst DELETE_TASK = 'DELETE_TASK'\nconst TOGGLE_IS_COMPLETED = 'TOGGLE_IS_COMPLETED'\n\nconst initialState = {\n\ttasks: [],\n}\n\nconst totoReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TASK: {\n\t\t\tconst newTask = {\n\t\t\t\tid: Date.now(),\n\t\t\t\tisCompleted: false,\n\t\t\t\ttext: action.payload,\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: [...state.tasks, newTask],\n\t\t\t}\n\t\t}\n\t\tcase TOGGLE_IS_COMPLETED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: state.tasks.map(task => {\n\t\t\t\t\tif (task.id === action.payload) {\n\t\t\t\t\t\ttask.isCompleted = !task.isCompleted\n\t\t\t\t\t}\n\t\t\t\t\treturn task\n\t\t\t\t}),\n\t\t\t}\n\n\t\tcase DELETE_TASK:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttasks: state.tasks.filter(task => task.id !== action.payload),\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const addTask = task => ({\n\ttype: ADD_TASK,\n\tpayload: task,\n})\n\nexport const toggleIsCompleted = id => ({\n\ttype: TOGGLE_IS_COMPLETED,\n\tpayload: id,\n})\n\nexport const deleteTask = id => ({\n\ttype: DELETE_TASK,\n\tpayload: id,\n})\n\nexport default totoReducer\n","import React from 'react'\nimport './AddForm.css'\nimport { useDispatch } from 'react-redux'\nimport { addTask } from '../../redux/totoReducer'\n\nexport const AddForm = React.memo(() => {\n\tconst dispatch = useDispatch()\n\n\tconst [input, setInput] = React.useState('')\n\n\tconst handleAddTask = () => {\n\t\tif (input.trim()) {\n\t\t\tdispatch(addTask(input.trim()))\n\t\t\tsetInput('')\n\t\t} else {\n\t\t\talert('write task')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='addForm'>\n\t\t\t<input\n\t\t\t\tclassName='input'\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder={'write your task'}\n\t\t\t\tautoFocus={true}\n\t\t\t\tonBlur={handleAddTask}\n\t\t\t\tvalue={input}\n\t\t\t\tonChange={e => setInput(e.target.value)}\n\t\t\t/>\n\n\t\t\t<div className='button'>\n\t\t\t\t<button onClick={handleAddTask} disabled={!input}>\n\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { deleteTask, toggleIsCompleted } from '../../../redux/totoReducer'\n\nexport const TodoItem = React.memo(({ text, isCompleted, id }) => {\n\tconst dispatch = useDispatch()\n\n\tconst handleIsCompleted = () => {\n\t\tdispatch(toggleIsCompleted(id))\n\t}\n\n\tconst handleDelete = () => {\n\t\tdispatch(deleteTask(id))\n\t}\n\n\treturn (\n\t\t<li>\n\t\t\t<input type='checkbox' checked={isCompleted} onChange={handleIsCompleted} />\n\t\t\t<span style={{ textDecoration: isCompleted && 'line-through' }}>{text}</span>\n\t\t\t<button type='button' onClick={handleDelete}>\n\t\t\t\tdelete\n\t\t\t</button>\n\t\t</li>\n\t)\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { TodoItem } from './TodoItem/TodoItem'\n\nexport const TodoList = () => {\n\tconst { tasks } = useSelector(({ todos }) => todos)\n\tconsole.log(tasks)\n\n\treturn (\n\t\t<ol style={{ marginLeft: '20px' }}>\n\t\t\t{tasks.map(todo => (\n\t\t\t\t<TodoItem key={todo.id} {...todo} />\n\t\t\t))}\n\t\t</ol>\n\t)\n}\n","import './App.css'\nimport { AddForm } from './components/AddForm/AddForm'\nimport { TodoList } from './components/TodoList/TodoList'\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div className='container'>\n        <div className='app__title'>\n          <p>Website todo</p>\n        </div>\n        <AddForm />\n        <TodoList />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { combineReducers, createStore } from 'redux'\nimport totoReducer from './totoReducer'\n\nlet reducers = combineReducers({\n  todos: totoReducer,\n})\n\nlet store = createStore(reducers)\n\nwindow.store = store\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}